import os
import json
import pandas as pd
import glob
import streamlit as st
import matplotlib.pyplot as plt

def dataraw():
    st.title("üìä Ph√¢n t√≠ch d·ªØ li·ªáu tuy·ªÉn d·ª•ng IT - D·ªØ li·ªáu ban ƒë·∫ßu")

    files = glob.glob("../../spark_jobs/Output/*.json")
    dfs = []

    for f in files:
        if os.path.getsize(f) > 0:
            try:
                with open(f, "r", encoding="utf-8") as file:
                    data = json.load(file)
                    rows = []
                    for group_block in data:
                        group = group_block.get("group", "")
                        jobs = group_block.get("jobs", [])
                        for job in jobs:
                            job["group"] = group
                            job["source"] = os.path.basename(f)
                            rows.append(job)
                    df_temp = pd.DataFrame(rows)
                    dfs.append(df_temp)
            except Exception as e:
                st.warning(f"L·ªói khi ƒë·ªçc {f}: {e}")

    if not dfs:
        st.error("Kh√¥ng load ƒë∆∞·ª£c d·ªØ li·ªáu JSON n√†o. Ki·ªÉm tra l·∫°i Dataset/")
        return

    df = pd.concat(dfs, ignore_index=True)

    st.subheader("T·ªïng quan")
    st.write(f"S·ªë job: {len(df)}")
    st.write("C√°c c·ªôt:", list(df.columns))
    st.write("Ngu·ªìn d·ªØ li·ªáu:", df['source'].unique())

    # --- Ph√¢n b·ªë theo th√†nh ph·ªë ---
    if "location" in df.columns:
        st.subheader("Ph√¢n b·ªë theo th√†nh ph·ªë (Top 10)")
        df["location"] = df["location"].fillna("Kh√¥ng r√µ").replace("", "Kh√¥ng r√µ")
        city_counts = df["location"].value_counts().head(10)
        st.bar_chart(city_counts)

    # --- Ph√¢n b·ªë m·ª©c l∆∞∆°ng ---
    if 'salary_raw' in df.columns:
        st.subheader("Ph√¢n b·ªë m·ª©c l∆∞∆°ng")
        fig, ax = plt.subplots()
        df['salary_raw'].value_counts().head(20).plot(kind="barh", ax=ax)
        st.pyplot(fig)
